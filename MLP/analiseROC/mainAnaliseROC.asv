
%DEFINE NOME DO TESTE
testName = 'Test1_MLPclodoaldo';
%testName = 'Test1_MLPalfaAdaptativo';

%SELECIONA ALGORITMOS PARA EXECUTAR
Algoritmos = {'MLP_clodoaldo'};
%Algoritmos = {'MLP_alfaAdaptativo'};
totalAlgoritmos = length(Algoritmos);

%SELECIONA VARIACAO DE NEURONIOS NA CAMADA OCULTA
Neuronios = [10 50 100 200];
%Neuronios = 20:20:200;
totalNeuronios = length(Neuronios);

%imprimi cabecalho
fprintf(['\n\n--------------------------------------------------------------\n']);
fprintf(['                      Testes de Análise ROC                   \n']);
fprintf(['--------------------------------------------------------------\n']);

%cria diretorio para o teste
dirName = ['Resultados/' testName '/'];
if ~exist(dirName, 'dir') % se o dir nao existe, ele eh criado
  mkdir(dirName);
end

im_roc = figure; %cria o grafico ROC
plot([0 1],[0 1],'b','DisplayName','Diagonal'); %plota a diagonal ascendente
hold on

ROCdata = cell(totalAlgoritmos, totalNeuronios);

for a=1:totalAlgoritmos % iteracao dos algoritmos
  fprintf(['\n\n############### Testes com ' Algoritmos{a} ' ###############']);
  
  for n=1:totalNeuronios %iteracao dos neuronios
    
    fprintf(['\n\n\n#### ' num2str(Neuronios(n)) ' Neurônios na Camada Econdida ####\n']);
    
    [TPR, FPR] = spambase_kfoldCV(Algoritmos{a}, Neuronios(n), dirName);
    ROCdata(1,1) = [2 3]
    %plot( FPR, TPR, 'DisplayName',[Algoritmos{a} ' com ' num2str(Neuronios(n))]); %Plota a curva ROC do componente
    plot( FPR, TPR, 'DisplayName',['MLP Clodoaldo com ' num2str(Neuronios(n))]); %Plota a curva ROC do componente
    
  end
end

fprintf('\n');
ylabel('True Positive Rate');
xlabel('False Positive Rate');
legend('show')
title('ROC')

print(im_roc,[dirName 'ROC'],'-dpng');